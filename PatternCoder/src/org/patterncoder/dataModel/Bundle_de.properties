# To change this template, choose Tools | Templates
# and open the template in the editor.

PATTERNCODER=PatternCoder (DE)
NOT_SUPPORTED=Funktion nicht unterst\u00fctzt
VALID_CLASS_NAME=Bitte geben Sie einen g\u00fcltigen Klassennamen ein:
VALIDNAME=einZulaessigerName
WIZARD_STEP_INVALID=Es gab Probleme beim Laden der Komponente 
NAME_BASIC\ RELATIONSHIP=Basic relationship
NAME_CREATIONAL_PATTERNS=Erzeugungsmuster
NAME_BEHAVIORAL_PATTERNS=Verhaltensmuster
NAME_STRUCTURAL_PATTERNS=Strukturmuster
NAME_NON_GOF=Sonstige Muster
IMAGE_NOT_CREATED=Bild konnte nicht erzeugt werden: \n
DESC_NON_GOF=Es gibt sehr viel mehr als die klassischen GOF-Patterns. 
DESC_STRUCTURAL=Structural patterns describe how objects and classes can be combined to form larger structures. They are based on relationships between classes and interfaces through inheritance and on composition of simple objects into more complex objects. Using these techniques structures can be created which provide behaviour which a single class or object cannot achieve.
DESC_BEHAVIORAL=Most of these design patterns are concerned with defining useful ways in which separate objects can interact with each other. In these patterns the objects are loosely coupled, but can communicate with other to perform functions which could not be achieved by individual objects.
DESC_CREATIONAL=Creational patterns are ones that create objects for you, rather than having you instantiate objects directly using the new key word. These patterns allow the task of creating objects to be done in the best possible way in a given situation, for example by allowing the actual type of the object created to be different under different circumstances which might arise as the program runs.
DESC_BASIC=These are not really design patterns, but are the building blocks for all the other categories of pattern. They define the way in which any pair of classes can be associated and any pair of objects can communicate with each other. Most design patterns consist of groups of classes or objects which all work together to provide useful behaviour, and the way in which each pair within the group work together is defined by the basic relationship between them.
